# Travis can building for OS X 10.11 El Capitan
matrix:
  include:
    - os: osx
      osx_image: xcode7.3
      sudo: required
      language: generic

before_install:
  # OS and Python info
  - uname -a
  - sudo -H python --version
  - sudo -H python -c "import struct; print(struct.calcsize('P') * 8)"
  - sudo -H python -c "import sys; print(sys.executable)"

  # Install pip
  - curl -O https://bootstrap.pypa.io/get-pip.py && sudo -H python get-pip.py && rm get-pip.py
  - sudo -H pip --version
  - sudo -H pip freeze

install:
  # Install and check installed packages
  - sudo -H pip install pipenv
  - sudo -H pipenv install --dev .
  - sudo -H pipenv run pip freeze

  # Build the two versions of ubitflashtool using PyInstaller
  - sudo -H pipenv run pyinstaller package/pyinstaller-cli.spec
  - sudo -H pipenv run pyinstaller package/pyinstaller-gui.spec

  # Collect the outputs
  - sudo -H mv dist artifacts
  - ls -l artifacts
  - sudo -H chmod +x ./artifacts/ubitflashtool-cli
  - cd artifacts && sudo -H zip --symlinks -r ubitflashtool-gui.zip ubitflashtool-gui.app && cd ..

script:
  - sudo -H pipenv run flake8 ubitflashtool/ tests/
  - sudo -H pipenv run python -m pytest -v --cov=ubitflashtool tests/
  # Lastly just run it as a simple test to check ubitflashtool is not broken
  - ./artifacts/ubitflashtool-cli -s my_script.py

after_script:
  # Upload built executables to a temporary service
  - curl --upload-file ./artifacts/ubitflashtool-gui.zip https://transfer.sh/ubitflashtool-gui.zip
  - curl --upload-file ./artifacts/ubitflashtool-cli https://transfer.sh/ubitflashtool-cli
  # - curl -F "file=@./artifacts/ubitflashtool-gui.zip" "https://file.io/?expires=3"
  # - curl -F "file=@./artifacts/ubitflashtool-cli" "https://file.io/?expires=3"

notifications:
  email:
    on_success: change
    on_failure: change
